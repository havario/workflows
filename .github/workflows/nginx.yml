---
name: 'Build and Publish Nginx'

on:
  schedule:
    - cron: '0 16 * * 3,6'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: 'Build and Publish Nginx'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ github.repository_owner }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Fetch Versions and Determine Build'
        run: |
          NGX_LVER="$(wget -qO- --tries=50 --header="Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/nginx/nginx/releases/latest | grep '"tag_name":' | sed -n 's/.*"tag_name": "[^0-9]*\([0-9.]*\)".*/\1/p')"
          NGX_CVER="$(wget -qO- --tries=50 https://hub.docker.com/v2/repositories/honeok/nginx/tags 2>/dev/null | grep -o '"name":"[^"]*"' | awk -F'"' '{print $4}' | grep -E -- '-alpine$' | sort -Vr | head -n1 | sed 's/-alpine$//')"
          ZSTD_LVER="$(wget -qO- --tries=50 https://api.github.com/repos/facebook/zstd/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//')"
          NGX_ALPINE_LVER="$(docker run --rm nginx:"${NGX_LVER}-alpine" sh -c "nginx -v 2>&1 | awk -F'/' '{print \$NF}'" 2>/dev/null || true)"
          NGX_ALPINE_TAG="$(docker run --rm nginx:"${NGX_LVER}-alpine" sh -c 'cat /etc/alpine-release | cut -d "." -f 1-2' 2>/dev/null || true)"
          echo "NGX_CVER=$NGX_CVER" >> $GITHUB_ENV
          echo "NGX_LVER=$NGX_LVER" >> $GITHUB_ENV
          echo "ZSTD_LVER=$ZSTD_LVER" >> $GITHUB_ENV
          echo "NGX_ALPINE_LVER=$NGX_ALPINE_LVER" >> $GITHUB_ENV
          echo "NGX_ALPINE_TAG=$NGX_ALPINE_TAG" >> $GITHUB_ENV
          if [[ ("$(echo -e "$NGX_LVER\n$NGX_CVER" | sort -V | head -n1)" != "$NGX_LVER" && "$NGX_ALPINE_LVER" == "$NGX_LVER") || (-z "$NGX_CVER" && -n "$NGX_ALPINE_LVER" && -n "$NGX_ALPINE_TAG") ]]; then
            echo "IS_RENEW=1" >> $GITHUB_ENV
          fi

      - name: 'Set up Docker QEMU'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to DockerHub'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Extract Docker metadata'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/caddy
          tags: |
            type=raw,value=${{ steps.bump_version.outputs.version }}-alpine
            type=raw,value=${{ steps.bump_version.outputs.version }}

      - name: 'Build and Push Nginx image'
        if: env.IS_RENEW == 1 || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/ldnmp/nginx
          file: ${{ github.workspace }}/ldnmp/nginx/Dockerfile
          platforms: linux/amd64
          build-args: |
            NGX_VERSION=${{ env.NGX_LVER }}
            ZSTD_VERSION=${{ env.ZSTD_LVER }}
          tags: |
            ${{ env.DOCKER_USERNAME }}/nginx:alpine
            ${{ env.DOCKER_USERNAME }}/nginx:${{ env.NGX_LVER }}-alpine
            ${{ env.DOCKER_USERNAME }}/nginx:${{ env.NGX_LVER }}-alpine${{ env.NGX_ALPINE_TAG }}
          push: true